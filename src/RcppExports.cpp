// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// calc_mid_error_C
double calc_mid_error_C(NumericVector md, NumericVector reconstructed_mid, NumericVector best_r, NumericVector r_shift);
RcppExport SEXP _CorMID_calc_mid_error_C(SEXP mdSEXP, SEXP reconstructed_midSEXP, SEXP best_rSEXP, SEXP r_shiftSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type md(mdSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type reconstructed_mid(reconstructed_midSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type best_r(best_rSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type r_shift(r_shiftSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_mid_error_C(md, reconstructed_mid, best_r, r_shift));
    return rcpp_result_gen;
END_RCPP
}
// poss_local_C
NumericMatrix poss_local_C(NumericVector vec, double d, double prec, Nullable<NumericMatrix> limits, double by, int length);
RcppExport SEXP _CorMID_poss_local_C(SEXP vecSEXP, SEXP dSEXP, SEXP precSEXP, SEXP limitsSEXP, SEXP bySEXP, SEXP lengthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vec(vecSEXP);
    Rcpp::traits::input_parameter< double >::type d(dSEXP);
    Rcpp::traits::input_parameter< double >::type prec(precSEXP);
    Rcpp::traits::input_parameter< Nullable<NumericMatrix> >::type limits(limitsSEXP);
    Rcpp::traits::input_parameter< double >::type by(bySEXP);
    Rcpp::traits::input_parameter< int >::type length(lengthSEXP);
    rcpp_result_gen = Rcpp::wrap(poss_local_C(vec, d, prec, limits, by, length));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_CorMID_calc_mid_error_C", (DL_FUNC) &_CorMID_calc_mid_error_C, 4},
    {"_CorMID_poss_local_C", (DL_FUNC) &_CorMID_poss_local_C, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_CorMID(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
